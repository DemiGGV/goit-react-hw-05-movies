{"version":3,"file":"static/js/275.c401b4cd.chunk.js","mappings":"uQA2BA,EApByB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAKjC,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,SANK,SAAAC,GACnBA,EAAIC,gBACL,EAIG,UACE,SAAC,KAAD,CACEC,UAAU,OACVC,KAAK,OACLC,KAAK,QACLP,MAAOA,EACPC,SAAU,SAAAE,GAAG,OAAIF,EAASE,EAAIK,OAAOR,MAAxB,OAKtB,E,SC2BD,EA9Ce,WAAO,IAAD,EACnB,GAAkCS,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,YAApB,QAA4B,IAExCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,GAAa,WAAYJ,GAFlC,gBAETK,EAFS,EAETA,QACRX,EAAaW,GAHI,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GATmB,CAUpB,GAAE,CAACH,IAOJ,OACE,4BACE,SAAC,EAAD,CAAWjB,MAAOiB,EAAQhB,SAPJ,SAAAwB,GAExBT,EADoB,KAANS,EAAW,CAAEA,EAAAA,GAAM,CAAC,EAEnC,IAKMf,EAAUgB,QACX,SAAC,KAAD,UACGhB,EAAUiB,KAAI,SAAAC,GAAK,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,YAAOD,EAAME,IAAMC,MAAO,CAAEC,KAAMpB,GAA1C,SACGgB,EAAMK,SAFFL,EAAME,GADG,MAQlBb,GACJ,SAAC,KAAD,UAAS,oCAET,SAAC,KAAD,UAAS,0BAIhB,C,8FChDYI,EAAY,mCAAG,WAC1Ba,GAD0B,iGAE1BC,EAF0B,+BAElB,GACRC,EAH0B,+BAGhB,EACVC,EAJ0B,+BAInB,EAJmB,KAQlBH,EARkB,OASnB,eATmB,OAanB,aAbmB,OAsBnB,cAtBmB,QA0BnB,WA1BmB,QA8BnB,cA9BmB,+BAUtBI,EAAc,sBACdC,EAAS,CAAEC,SAAU,SAXC,mCActBF,EAAc,gBACdC,EAAS,CACPJ,MAAOA,EACPM,cAAe,QACfD,SAAU,QACVH,KAAMA,GAnBc,oCAuBtBC,EAAW,iBAAaF,GACxBG,EAAS,CAAEC,SAAU,SAxBC,oCA2BtBF,EAAW,iBAAaF,EAAb,YACXG,EAAS,CAAEC,SAAU,SA5BC,oCA+BtBF,EAAW,iBAAaF,EAAb,YACXG,EAAS,CAAEC,SAAU,QAASH,KAAMA,GAhCd,wEAqCpBK,EArCoB,sCAqCiBJ,GACrCK,EAAU,CACdC,OAAQ,MACRL,OAAQA,EACRM,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA5CoB,UA+CHC,EAAAA,EAAAA,IAAUN,EAAKC,GA/CZ,eA+CpBM,EA/CoB,yBAiDnBA,EAASC,MAjDU,4CAAH,qD","sources":["components/Searchbar/Searchbar.jsx","pages/Movies.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchHead,\n} from 'styling/MainContainerCSS';\n\nexport const Searchbar = ({ value, onChange }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n  };\n\n  return (\n    <SearchHead>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          autoFocus=\"true\"\n          type=\"text\"\n          name=\"query\"\n          value={value}\n          onChange={evt => onChange(evt.target.value)}\n        />\n      </SearchForm>\n    </SearchHead>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { Message, MoviesStyled } from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst Movies = () => {\n  const [moviesArr, setMoviesArr] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querry = searchParams.get('q') ?? '';\n\n  useEffect(() => {\n    if (!querry) return;\n    const fetchDetails = async () => {\n      try {\n        const { results } = await fetchGetImgs('searchIO', querry);\n        setMoviesArr(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n  }, [querry]);\n\n  const updateQueryString = q => {\n    const nextQ = q !== '' ? { q } : {};\n    setSearchParams(nextQ);\n  };\n\n  return (\n    <div>\n      <Searchbar value={querry} onChange={updateQueryString} />\n      {!!moviesArr.length ? (\n        <MoviesStyled>\n          {moviesArr.map(movie => (\n            <li key={movie.id}>\n              <Link to={`./${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </MoviesStyled>\n      ) : !!querry ? (\n        <Message>There no movies on your query!</Message>\n      ) : (\n        <Message>Input your query...</Message>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  movieID = 0,\n  page = 1\n) => {\n  let params;\n  let paramString;\n  switch (operation) {\n    case 'trendingIO':\n      paramString = '/trending/movie/day';\n      params = { language: 'en-US' };\n      break;\n    case 'searchIO':\n      paramString = '/search/movie';\n      params = {\n        query: query,\n        include_adult: 'false',\n        language: 'en-US',\n        page: page,\n      };\n      break;\n    case 'detailsIO':\n      paramString = `/movie/${movieID}`;\n      params = { language: 'en-US' };\n      break;\n    case 'castIO':\n      paramString = `/movie/${movieID}/credits`;\n      params = { language: 'en-US' };\n      break;\n    case 'reviewsIO':\n      paramString = `/movie/${movieID}/reviews`;\n      params = { language: 'en-US', page: page };\n      break;\n    default:\n      break;\n  }\n  const url = `https://api.themoviedb.org/3${paramString}`;\n  const options = {\n    method: 'GET',\n    params: params,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n    },\n  };\n  const response = await axios.get(url, options);\n  // console.log(response.data);\n  return response.data;\n};\n"],"names":["value","onChange","onSubmit","evt","preventDefault","autoFocus","type","name","target","useState","moviesArr","setMoviesArr","location","useLocation","useSearchParams","searchParams","setSearchParams","querry","get","useEffect","fetchDetails","fetchGetImgs","results","console","log","q","length","map","movie","to","id","state","from","title","operation","query","movieID","page","paramString","params","language","include_adult","url","options","method","headers","accept","Authorization","axios","response","data"],"sourceRoot":""}