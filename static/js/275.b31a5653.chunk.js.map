{"version":3,"file":"static/js/275.b31a5653.chunk.js","mappings":"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","sources":["components/Searchbar/Searchbar.jsx","pages/Movies.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchFormYearInput,\n  SearchHead,\n} from 'styling/MainContainerCSS';\n\nexport const Searchbar = ({ value, value1, onChange }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n  };\n\n  return (\n    <SearchHead>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          placeholder=\"Input name...\"\n          autoFocus=\"true\"\n          type=\"text\"\n          name=\"query\"\n          value={value}\n          onChange={evt => onChange('query', evt.target.value)}\n        />\n        <SearchFormYearInput\n          placeholder=\"Input Release date...\"\n          type=\"number\"\n          min=\"1980\"\n          max=\"2023\"\n          step=\"1\"\n          name=\"year\"\n          value={value1}\n          onChange={evt => onChange('year', evt.target.value)}\n        />\n      </SearchForm>\n    </SearchHead>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  value: PropTypes.string.isRequired,\n  value1: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { Message, MoviesStyled } from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst Movies = () => {\n  const [moviesArr, setMoviesArr] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const query = searchParams.get('query') ?? '';\n  // const year = searchParams.get('year') ?? '';\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  useEffect(() => {\n    if (!params.query) return;\n    const fetchDetails = async () => {\n      try {\n        const { results } = await fetchGetImgs(\n          'searchIO',\n          params.query,\n          params.year\n        );\n        setMoviesArr(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n  }, [params]);\n\n  const updateQueryString = (parameter, value) => {\n    if (value === '') {\n      if (!delete params[parameter]) {\n        console.log('Error delete');\n      }\n    } else {\n      params[parameter] = value;\n    }\n    setSearchParams(params);\n  };\n\n  return (\n    <div>\n      <Searchbar\n        value={params.query ?? ''}\n        value1={params.year ?? '1980'}\n        onChange={updateQueryString}\n      />\n      {!!moviesArr.length ? (\n        <MoviesStyled>\n          {moviesArr.map(movie => (\n            <li key={movie.id}>\n              <Link to={`./${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </MoviesStyled>\n      ) : !!params.query ? (\n        <Message>There no movies on your query!</Message>\n      ) : (\n        <Message>Input your query...</Message>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  year = '',\n  movieID = 0,\n  page = 1\n) => {\n  let params;\n  let paramString;\n  switch (operation) {\n    case 'trendingIO':\n      paramString = '/trending/movie/day';\n      params = { language: 'en-US' };\n      break;\n    case 'searchIO':\n      paramString = '/search/movie';\n      params = {\n        query: query,\n        primary_release_year: year,\n        include_adult: 'false',\n        language: 'en-US',\n        page: page,\n      };\n      break;\n    case 'detailsIO':\n      paramString = `/movie/${movieID}`;\n      params = { language: 'en-US' };\n      break;\n    case 'castIO':\n      paramString = `/movie/${movieID}/credits`;\n      params = { language: 'en-US' };\n      break;\n    case 'reviewsIO':\n      paramString = `/movie/${movieID}/reviews`;\n      params = { language: 'en-US', page: page };\n      break;\n    default:\n      break;\n  }\n  const url = `https://api.themoviedb.org/3${paramString}`;\n  const options = {\n    method: 'GET',\n    params: params,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n    },\n  };\n  const response = await axios.get(url, options);\n  return response.data;\n};\n"],"names":["value","value1","onChange","onSubmit","evt","preventDefault","placeholder","autoFocus","type","name","target","min","max","step","useState","moviesArr","setMoviesArr","location","useLocation","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","useEffect","query","fetchDetails","fetchGetImgs","year","results","console","log","parameter","length","map","movie","to","id","state","from","title","operation","movieID","page","paramString","language","primary_release_year","include_adult","url","options","method","headers","accept","Authorization","axios","response","data"],"sourceRoot":""}