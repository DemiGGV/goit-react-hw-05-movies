{"version":3,"file":"static/js/186.f1fa2afc.chunk.js","mappings":"kOA2CA,UAtCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GADSC,EAAAA,EAAAA,MAAPC,GAEFC,GAAQC,EAAAA,EAAAA,SAAO,GAgBrB,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAMG,QAAX,CACA,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,GAAa,YAAa,GAAIR,GAFpC,OAEXS,EAFW,OAGjBV,EAAWU,EAASC,SAHH,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBL,IACAJ,EAAMG,SAAU,CAVU,CAW3B,GAAE,CAACH,EAAOH,KAGT,SAAC,KAAD,UACKF,EAAQe,OACTf,EAAQgB,KAAI,SAAAC,GACV,OACE,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOC,OAKnB,KAED,uBAAG,mCAIV,C,8FCvCYR,EAAY,mCAAG,WAC1BU,GAD0B,iGAE1BC,EAF0B,+BAElB,GACRnB,EAH0B,+BAGhB,EACVoB,EAJ0B,+BAInB,EAJmB,KAQlBF,EARkB,OASnB,eATmB,OAanB,aAbmB,OAsBnB,cAtBmB,QA0BnB,WA1BmB,QA8BnB,cA9BmB,+BAUtBG,EAAc,sBACdC,EAAS,CAAEC,SAAU,SAXC,mCActBF,EAAc,gBACdC,EAAS,CACPH,MAAOA,EACPK,cAAe,QACfD,SAAU,QACVH,KAAMA,GAnBc,oCAuBtBC,EAAW,iBAAarB,GACxBsB,EAAS,CAAEC,SAAU,SAxBC,oCA2BtBF,EAAW,iBAAarB,EAAb,YACXsB,EAAS,CAAEC,SAAU,SA5BC,oCA+BtBF,EAAW,iBAAarB,EAAb,YACXsB,EAAS,CAAEC,SAAU,QAASH,KAAMA,GAhCd,wEAqCpBK,EArCoB,sCAqCiBJ,GACrCK,EAAU,CACdC,OAAQ,MACRL,OAAQA,EACRM,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA5CoB,UA+CHC,EAAAA,EAAAA,IAAUN,EAAKC,GA/CZ,eA+CpBjB,EA/CoB,yBAgDnBA,EAASuB,MAhDU,4CAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList } from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  const movieID = id;\n  const first = useRef(true);\n\n  useEffect(() => {\n    if (!first.current) return;\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchGetImgs('reviewsIO', '', movieID);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n    first.current = false;\n  }, [first, movieID]);\n\n  return (\n    <ReviewList>\n      {!!reviews.length ? (\n        reviews.map(review => {\n          return (\n            <li key={review.author}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We have no reviews until now.</p>\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  movieID = 0,\n  page = 1\n) => {\n  let params;\n  let paramString;\n  switch (operation) {\n    case 'trendingIO':\n      paramString = '/trending/movie/day';\n      params = { language: 'en-US' };\n      break;\n    case 'searchIO':\n      paramString = '/search/movie';\n      params = {\n        query: query,\n        include_adult: 'false',\n        language: 'en-US',\n        page: page,\n      };\n      break;\n    case 'detailsIO':\n      paramString = `/movie/${movieID}`;\n      params = { language: 'en-US' };\n      break;\n    case 'castIO':\n      paramString = `/movie/${movieID}/credits`;\n      params = { language: 'en-US' };\n      break;\n    case 'reviewsIO':\n      paramString = `/movie/${movieID}/reviews`;\n      params = { language: 'en-US', page: page };\n      break;\n    default:\n      break;\n  }\n  const url = `https://api.themoviedb.org/3${paramString}`;\n  const options = {\n    method: 'GET',\n    params: params,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n    },\n  };\n  const response = await axios.get(url, options);\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieID","useParams","id","first","useRef","useEffect","current","fetchDetails","fetchGetImgs","response","results","console","log","length","map","review","author","content","operation","query","page","paramString","params","language","include_adult","url","options","method","headers","accept","Authorization","axios","data"],"sourceRoot":""}