{"version":3,"file":"static/js/884.d25bddb7.chunk.js","mappings":"mPAqEA,UAzDqB,WACnB,OAA0CA,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAQC,EAAAA,EAAAA,SAAO,GAEfC,GADSC,EAAAA,EAAAA,MAAPC,GAEFC,GAAWJ,EAAAA,EAAAA,SAAOK,EAAAA,EAAAA,QAExBC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAMQ,QAAX,CACA,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,GAAa,YAAa,GAAIR,GAFpC,OAEXS,EAFW,OAGjBZ,EAAiBY,GAHA,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,IACAT,EAAMQ,SAAU,CAVU,CAW3B,GAAE,CAACR,EAAOE,IAEX,IAAQY,EACNhB,EADMgB,YAAaC,EACnBjB,EADmBiB,eAAgBC,EACnClB,EADmCkB,aAAcC,EACjDnB,EADiDmB,SAAUC,EAC3DpB,EAD2DoB,OAE7D,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAMC,GAAId,EAASG,QAAQY,MAAMC,KAAjC,UACE,SAAC,KAAD,CAAYC,KAAK,SAAjB,SAA0B,oBAE5B,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IAAG,yCAAoCT,GACvCU,IAAKT,KAEP,4BACE,wBAAKA,KACL,yBAAG,cAAYU,KAAKC,MAAqB,GAAfV,GAAmB,QAC7C,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,WACHC,IAAU,uBAAIA,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGxD,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAMX,GAAG,OAAT,SAAgB,aAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,wBAGvB,SAAC,EAAAY,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,8FC/DYtB,EAAY,mCAAG,WAC1BuB,GAD0B,iGAE1BC,EAF0B,+BAElB,GACRhC,EAH0B,+BAGhB,EACViC,EAJ0B,+BAInB,EAILvB,QAAQC,IAAIoB,EAAWC,EAAOhC,EAASiC,GARf,KAWhBF,EAXgB,OAYjB,eAZiB,OAgBjB,aAhBiB,QAyBjB,cAzBiB,QA6BjB,WA7BiB,QAiCjB,cAjCiB,+BAapBG,EAAc,sBACdC,EAAS,CAAEC,SAAU,SAdD,oCAiBpBF,EAAc,gBACdC,EAAS,CACPH,MAAOA,EACPK,cAAe,QACfD,SAAU,QACVH,KAAMA,GAtBY,oCA0BpBC,EAAW,iBAAalC,GACxBmC,EAAS,CAAEC,SAAU,SA3BD,oCA8BpBF,EAAW,iBAAalC,EAAb,YACXmC,EAAS,CAAEC,SAAU,SA/BD,oCAkCpBF,EAAW,iBAAalC,EAAb,YACXmC,EAAS,CAAEC,SAAU,QAASH,KAAMA,GAnChB,wEAwClBK,EAxCkB,sCAwCmBJ,GACrCK,EAAU,CACdC,OAAQ,MACRL,OAAQA,EACRM,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA/CkB,UAmDDC,EAAAA,EAAAA,IAAUN,EAAKC,GAnDd,eAmDlB9B,EAnDkB,OAoDxBC,QAAQC,IAAIF,EAASoC,MApDG,kBAqDjBpC,EAASoC,MArDQ,4CAAH,qD","sources":["pages/MovieDetails.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import { Loader } from 'components/Loader';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  ButtonBack,\n  MovieDetailsSection,\n  MovieDetailsStyled,\n  MoviePoster,\n  MoviesStyled,\n} from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst MovieDetails = () => {\n  const [movieDetailes, setMovieDetailes] = useState({});\n  const first = useRef(true);\n  const { id } = useParams();\n  const movieID = id;\n  const location = useRef(useLocation());\n\n  useEffect(() => {\n    if (!first.current) return;\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchGetImgs('detailsIO', '', movieID);\n        setMovieDetailes(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n    first.current = false;\n  }, [first, movieID]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieDetailes;\n  return (\n    <MovieDetailsSection>\n      <Link to={location.current.state.from}>\n        <ButtonBack type=\"button\">Fall back!!!</ButtonBack>\n      </Link>\n      <MovieDetailsStyled>\n        <MoviePoster\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={original_title}\n        />\n        <div>\n          <h2>{original_title}</h2>\n          <p>User score:{Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres && <p>{genres.map(genre => genre.name).join(', ')}</p>}\n        </div>\n      </MovieDetailsStyled>\n      <MoviesStyled>\n        <li>\n          <Link to=\"cast\">Cast:</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">User reviews:</Link>\n        </li>\n      </MoviesStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsSection>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// export const PER_PAGE = 15;\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  movieID = 0,\n  page = 1\n) =>\n  // controller\n  {\n    console.log(operation, query, movieID, page);\n    let params;\n    let paramString;\n    switch (operation) {\n      case 'trendingIO':\n        paramString = '/trending/movie/day';\n        params = { language: 'en-US' };\n        break;\n      case 'searchIO':\n        paramString = '/search/movie';\n        params = {\n          query: query,\n          include_adult: 'false',\n          language: 'en-US',\n          page: page,\n        };\n        break;\n      case 'detailsIO':\n        paramString = `/movie/${movieID}`;\n        params = { language: 'en-US' };\n        break;\n      case 'castIO':\n        paramString = `/movie/${movieID}/credits`;\n        params = { language: 'en-US' };\n        break;\n      case 'reviewsIO':\n        paramString = `/movie/${movieID}/reviews`;\n        params = { language: 'en-US', page: page };\n        break;\n      default:\n        break;\n    }\n    const url = `https://api.themoviedb.org/3${paramString}`;\n    const options = {\n      method: 'GET',\n      params: params,\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n      },\n      // signal: controller.signal,\n    };\n    const response = await axios.get(url, options);\n    console.log(response.data);\n    return response.data;\n  };\n"],"names":["useState","movieDetailes","setMovieDetailes","first","useRef","movieID","useParams","id","location","useLocation","useEffect","current","fetchDetails","fetchGetImgs","response","console","log","poster_path","original_title","vote_average","overview","genres","to","state","from","type","src","alt","Math","round","map","genre","name","join","Suspense","fallback","operation","query","page","paramString","params","language","include_adult","url","options","method","headers","accept","Authorization","axios","data"],"sourceRoot":""}