{"version":3,"file":"static/js/884.28b91191.chunk.js","mappings":"mPAgFA,UAnEqB,WAAO,IAAD,IACzB,GAA0CA,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,GADSC,EAAAA,EAAAA,MAAPC,GAEFC,GAAQC,EAAAA,EAAAA,SAAO,GACfC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAMK,QAAX,CACA,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,GAAa,YAAa,GAAIV,GAFpC,OAEXW,EAFW,OAGjBZ,EAAiBY,GAHA,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,IACAN,EAAMK,SAAU,CAVU,CAW3B,GAAE,CAACL,EAAOH,IAEX,IAAQc,EACNhB,EADMgB,YAAaC,EACnBjB,EADmBiB,eAAgBC,EACnClB,EADmCkB,aAAcC,EACjDnB,EADiDmB,SAAUC,EAC3DpB,EAD2DoB,OAE7D,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAMC,GAAE,oBAAEd,EAASe,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAAC,KAAD,CAAYC,KAAK,SAAjB,SAA0B,eAE5B,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IACET,EAAW,yCAC2BA,GAClC,6CAENU,IAAKT,KAEP,4BACE,SAAC,KAAD,UAAYA,KACZ,6CAAmBU,KAAKC,MAAqB,GAAfV,GAA9B,QACA,wBAAI,cACJ,wBACE,uBAAIC,OAEN,wBAAI,WACHC,IAAU,uBAAIA,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGxD,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAMX,GAAG,OAAOC,MAAO,CAAEC,KAAMhB,EAASe,MAAMC,MAA9C,SAAsD,aAIxD,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAMhB,EAASe,MAAMC,MAAjD,SAAyD,wBAK7D,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,8FC5EYtB,EAAY,mCAAG,WAC1BuB,GAD0B,iGAE1BC,EAF0B,+BAElB,GACRlC,EAH0B,+BAGhB,EACVmC,EAJ0B,+BAInB,EAJmB,KAQlBF,EARkB,OASnB,eATmB,OAanB,aAbmB,OAsBnB,cAtBmB,QA0BnB,WA1BmB,QA8BnB,cA9BmB,+BAUtBG,EAAc,sBACdC,EAAS,CAAEC,SAAU,SAXC,mCActBF,EAAc,gBACdC,EAAS,CACPH,MAAOA,EACPK,cAAe,QACfD,SAAU,QACVH,KAAMA,GAnBc,oCAuBtBC,EAAW,iBAAapC,GACxBqC,EAAS,CAAEC,SAAU,SAxBC,oCA2BtBF,EAAW,iBAAapC,EAAb,YACXqC,EAAS,CAAEC,SAAU,SA5BC,oCA+BtBF,EAAW,iBAAapC,EAAb,YACXqC,EAAS,CAAEC,SAAU,QAASH,KAAMA,GAhCd,wEAqCpBK,EArCoB,sCAqCiBJ,GACrCK,EAAU,CACdC,OAAQ,MACRL,OAAQA,EACRM,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA5CoB,UA+CHC,EAAAA,EAAAA,IAAUN,EAAKC,GA/CZ,eA+CpB9B,EA/CoB,yBAiDnBA,EAASoC,MAjDU,4CAAH,qD","sources":["pages/MovieDetails.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  ButtonBack,\n  MovieDetailsSection,\n  MovieDetailsStyled,\n  MoviePoster,\n  MoviesStyled,\n  TitleName,\n} from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst MovieDetails = () => {\n  const [movieDetailes, setMovieDetailes] = useState({});\n  const { id } = useParams();\n  const movieID = id;\n  const first = useRef(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!first.current) return;\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchGetImgs('detailsIO', '', movieID);\n        setMovieDetailes(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n    first.current = false;\n  }, [first, movieID]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieDetailes;\n  return (\n    <MovieDetailsSection>\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonBack type=\"button\">Go back</ButtonBack>\n      </Link>\n      <MovieDetailsStyled>\n        <MoviePoster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : 'https://fakeimg.pl/300x450?text=No%20Photo'\n          }\n          alt={original_title}\n        />\n        <div>\n          <TitleName>{original_title}</TitleName>\n          <p>{`User score: ${Math.round(vote_average * 10)}%`}</p>\n          <h3>Overview</h3>\n          <p>\n            <i>{overview}</i>\n          </p>\n          <h3>Genres</h3>\n          {genres && <p>{genres.map(genre => genre.name).join(', ')}</p>}\n        </div>\n      </MovieDetailsStyled>\n      <MoviesStyled>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast:\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            User reviews:\n          </Link>\n        </li>\n      </MoviesStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsSection>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  movieID = 0,\n  page = 1\n) => {\n  let params;\n  let paramString;\n  switch (operation) {\n    case 'trendingIO':\n      paramString = '/trending/movie/day';\n      params = { language: 'en-US' };\n      break;\n    case 'searchIO':\n      paramString = '/search/movie';\n      params = {\n        query: query,\n        include_adult: 'false',\n        language: 'en-US',\n        page: page,\n      };\n      break;\n    case 'detailsIO':\n      paramString = `/movie/${movieID}`;\n      params = { language: 'en-US' };\n      break;\n    case 'castIO':\n      paramString = `/movie/${movieID}/credits`;\n      params = { language: 'en-US' };\n      break;\n    case 'reviewsIO':\n      paramString = `/movie/${movieID}/reviews`;\n      params = { language: 'en-US', page: page };\n      break;\n    default:\n      break;\n  }\n  const url = `https://api.themoviedb.org/3${paramString}`;\n  const options = {\n    method: 'GET',\n    params: params,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n    },\n  };\n  const response = await axios.get(url, options);\n  // console.log(response.data);\n  return response.data;\n};\n"],"names":["useState","movieDetailes","setMovieDetailes","movieID","useParams","id","first","useRef","location","useLocation","useEffect","current","fetchDetails","fetchGetImgs","response","console","log","poster_path","original_title","vote_average","overview","genres","to","state","from","type","src","alt","Math","round","map","genre","name","join","Suspense","fallback","operation","query","page","paramString","params","language","include_adult","url","options","method","headers","accept","Authorization","axios","data"],"sourceRoot":""}