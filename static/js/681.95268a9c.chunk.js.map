{"version":3,"file":"static/js/681.95268a9c.chunk.js","mappings":"kOA2CA,UAtCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GADSC,EAAAA,EAAAA,MAAPC,GAEFC,GAAQC,EAAAA,EAAAA,SAAO,GAgBrB,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAMG,QAAX,CACA,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,GAAa,YAAa,GAAIR,GAFpC,OAEXS,EAFW,OAGjBV,EAAWU,EAASC,SAHH,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBL,IACAJ,EAAMG,SAAU,CAVU,CAW3B,GAAE,CAACH,EAAOH,KAGT,SAAC,KAAD,UACKF,EAAQe,OACTf,EAAQgB,KAAI,SAAAC,GACV,OACE,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOC,OAKnB,KAED,uBAAG,mCAIV,C,8FCrCYR,EAAY,mCAAG,WAC1BU,GAD0B,iGAE1BC,EAF0B,+BAElB,GACRnB,EAH0B,+BAGhB,EACVoB,EAJ0B,+BAInB,EAILT,QAAQC,IAAIM,EAAWC,EAAOnB,EAASoB,GARf,KAWhBF,EAXgB,OAYjB,eAZiB,OAgBjB,aAhBiB,QAyBjB,cAzBiB,QA6BjB,WA7BiB,QAiCjB,cAjCiB,+BAapBG,EAAc,sBACdC,EAAS,CAAEC,SAAU,SAdD,oCAiBpBF,EAAc,gBACdC,EAAS,CACPH,MAAOA,EACPK,cAAe,QACfD,SAAU,QACVH,KAAMA,GAtBY,oCA0BpBC,EAAW,iBAAarB,GACxBsB,EAAS,CAAEC,SAAU,SA3BD,oCA8BpBF,EAAW,iBAAarB,EAAb,YACXsB,EAAS,CAAEC,SAAU,SA/BD,oCAkCpBF,EAAW,iBAAarB,EAAb,YACXsB,EAAS,CAAEC,SAAU,QAASH,KAAMA,GAnChB,wEAwClBK,EAxCkB,sCAwCmBJ,GACrCK,EAAU,CACdC,OAAQ,MACRL,OAAQA,EACRM,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA/CkB,UAmDDC,EAAAA,EAAAA,IAAUN,EAAKC,GAnDd,eAmDlBjB,EAnDkB,OAoDxBE,QAAQC,IAAIH,EAASuB,MApDG,kBAqDjBvB,EAASuB,MArDQ,4CAAH,qD","sources":["components/Reviews.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList } from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  const movieID = id;\n  const first = useRef(true);\n\n  useEffect(() => {\n    if (!first.current) return;\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchGetImgs('reviewsIO', '', movieID);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n    first.current = false;\n  }, [first, movieID]);\n\n  return (\n    <ReviewList>\n      {!!reviews.length ? (\n        reviews.map(review => {\n          return (\n            <li key={review.author}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We have no reviews until now.</p>\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// export const PER_PAGE = 15;\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  movieID = 0,\n  page = 1\n) =>\n  // controller\n  {\n    console.log(operation, query, movieID, page);\n    let params;\n    let paramString;\n    switch (operation) {\n      case 'trendingIO':\n        paramString = '/trending/movie/day';\n        params = { language: 'en-US' };\n        break;\n      case 'searchIO':\n        paramString = '/search/movie';\n        params = {\n          query: query,\n          include_adult: 'false',\n          language: 'en-US',\n          page: page,\n        };\n        break;\n      case 'detailsIO':\n        paramString = `/movie/${movieID}`;\n        params = { language: 'en-US' };\n        break;\n      case 'castIO':\n        paramString = `/movie/${movieID}/credits`;\n        params = { language: 'en-US' };\n        break;\n      case 'reviewsIO':\n        paramString = `/movie/${movieID}/reviews`;\n        params = { language: 'en-US', page: page };\n        break;\n      default:\n        break;\n    }\n    const url = `https://api.themoviedb.org/3${paramString}`;\n    const options = {\n      method: 'GET',\n      params: params,\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n      },\n      // signal: controller.signal,\n    };\n    const response = await axios.get(url, options);\n    console.log(response.data);\n    return response.data;\n  };\n"],"names":["useState","reviews","setReviews","movieID","useParams","id","first","useRef","useEffect","current","fetchDetails","fetchGetImgs","response","results","console","log","length","map","review","author","content","operation","query","page","paramString","params","language","include_adult","url","options","method","headers","accept","Authorization","axios","data"],"sourceRoot":""}