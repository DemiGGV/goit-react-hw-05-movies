{"version":3,"file":"static/js/415.67ffa32b.chunk.js","mappings":"0OAwCA,UAnCa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,SAAO,GAgBrB,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAMG,QAAX,CACA,IAAMC,EAAU,mCAAG,8GAEQC,EAAAA,EAAAA,GAAa,cAFrB,OAETC,EAFS,OAGfP,EAAYO,EAASC,SAHN,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQhBL,IACAJ,EAAMG,SAAU,CAVU,CAW3B,GAAE,CAACH,KAGF,4BACE,SAAC,KAAD,UAAO,oBACP,SAAC,KAAD,UACGF,EAASY,KAAI,SAAAC,GAAK,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMpB,GAA/C,SACGgB,EAAMK,SAFFL,EAAME,GADE,QAU1B,C,8FCpCYR,EAAY,mCAAG,WAC1BY,GAD0B,iGAE1BC,EAF0B,+BAElB,GACRC,EAH0B,+BAGhB,EACVC,EAJ0B,+BAInB,EAJmB,KAQlBH,EARkB,OASnB,eATmB,OAanB,aAbmB,OAsBnB,cAtBmB,QA0BnB,WA1BmB,QA8BnB,cA9BmB,+BAUtBI,EAAc,sBACdC,EAAS,CAAEC,SAAU,SAXC,mCActBF,EAAc,gBACdC,EAAS,CACPJ,MAAOA,EACPM,cAAe,QACfD,SAAU,QACVH,KAAMA,GAnBc,oCAuBtBC,EAAW,iBAAaF,GACxBG,EAAS,CAAEC,SAAU,SAxBC,oCA2BtBF,EAAW,iBAAaF,EAAb,YACXG,EAAS,CAAEC,SAAU,SA5BC,oCA+BtBF,EAAW,iBAAaF,EAAb,YACXG,EAAS,CAAEC,SAAU,QAASH,KAAMA,GAhCd,wEAqCpBK,EArCoB,sCAqCiBJ,GACrCK,EAAU,CACdC,OAAQ,MACRL,OAAQA,EACRM,QAAS,CACPC,OAAQ,mBACRC,cACE,+NA5CoB,UA+CHC,EAAAA,EAAAA,IAAUN,EAAKC,GA/CZ,eA+CpBpB,EA/CoB,OAgD1BE,QAAQC,IAAIH,EAAS0B,MAhDK,kBAiDnB1B,EAAS0B,MAjDU,4CAAH,qD","sources":["pages/Home.jsx","utils/FetchEngine.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesStyled, Title } from 'styling/MainContainerCSS';\nimport { fetchGetImgs } from 'utils/FetchEngine';\n\nconst Home = () => {\n  const location = useLocation();\n  const [trendArr, setTrendArr] = useState([]);\n  const first = useRef(true);\n\n  useEffect(() => {\n    if (!first.current) return;\n    const fetchTrend = async () => {\n      try {\n        const response = await fetchGetImgs('trendingIO');\n        setTrendArr(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrend();\n    first.current = false;\n  }, [first]);\n\n  return (\n    <div>\n      <Title>Trending today</Title>\n      <MoviesStyled>\n        {trendArr.map(movie => (\n          <li key={movie.id}>\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </MoviesStyled>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const fetchGetImgs = async (\n  operation,\n  query = '',\n  movieID = 0,\n  page = 1\n) => {\n  let params;\n  let paramString;\n  switch (operation) {\n    case 'trendingIO':\n      paramString = '/trending/movie/day';\n      params = { language: 'en-US' };\n      break;\n    case 'searchIO':\n      paramString = '/search/movie';\n      params = {\n        query: query,\n        include_adult: 'false',\n        language: 'en-US',\n        page: page,\n      };\n      break;\n    case 'detailsIO':\n      paramString = `/movie/${movieID}`;\n      params = { language: 'en-US' };\n      break;\n    case 'castIO':\n      paramString = `/movie/${movieID}/credits`;\n      params = { language: 'en-US' };\n      break;\n    case 'reviewsIO':\n      paramString = `/movie/${movieID}/reviews`;\n      params = { language: 'en-US', page: page };\n      break;\n    default:\n      break;\n  }\n  const url = `https://api.themoviedb.org/3${paramString}`;\n  const options = {\n    method: 'GET',\n    params: params,\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwY2VmNjY1MmU1NDcxYTEwMWQ5YTI2MWViNTI1YjVkZSIsInN1YiI6IjY0OTEzNDBjYzNjODkxMDEwY2E2NzM0YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.10kFmhlhDD5DpnNqL0Rvvzn-vv7sk9BM4XvZxV0zxYg',\n    },\n  };\n  const response = await axios.get(url, options);\n  console.log(response.data);\n  return response.data;\n};\n"],"names":["location","useLocation","useState","trendArr","setTrendArr","first","useRef","useEffect","current","fetchTrend","fetchGetImgs","response","results","console","log","map","movie","to","id","state","from","title","operation","query","movieID","page","paramString","params","language","include_adult","url","options","method","headers","accept","Authorization","axios","data"],"sourceRoot":""}